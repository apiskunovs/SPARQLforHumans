<Playlist Version="1.0">
  <Add Test="SparqlForHumans.UnitTests.FilterHelperTests.TestFilterCompareWithPlainCount" />
  <Add Test="SparqlForHumans.UnitTests.FilterHelperTests.TestFilterCompareWithPlainLineByLine" />
  <Add Test="SparqlForHumans.UnitTests.FilterHelperTests.TestIsValidTriple" />
  <Add Test="SparqlForHumans.UnitTests.FilterHelperTests+FilterTrimmedTests.TestFilterFileLimit200" />
  <Add Test="SparqlForHumans.UnitTests.FilterHelperTests+FilterTrimmedTests.TestFilterFileLimitZero" />
  <Add Test="SparqlForHumans.UnitTests.FilterHelperTests+FilterTrimmedTests.TestFilterGZipOutput" />
  <Add Test="SparqlForHumans.UnitTests.FilterHelperTests+FilterTrimmedTests.TestFilteredOutputTypeIsCompressed" />
  <Add Test="SparqlForHumans.UnitTests.IndexFieldsRanking.TestIndexHasCorrectRankingFields" />
  <Add Test="SparqlForHumans.UnitTests.IndexFieldsRanking.TestIndexWithDifferentIdsHasCorrectRankingFields" />
  <Add Test="SparqlForHumans.UnitTests.PageRankRankingTests.TestBuildDictionary" />
  <Add Test="SparqlForHumans.UnitTests.PageRankRankingTests.TestBuildIdRankDictionaryDifferentIds" />
  <Add Test="SparqlForHumans.UnitTests.PageRankRankingTests.TestBuildIdRankDictionarySimpleIds" />
  <Add Test="SparqlForHumans.UnitTests.PageRankRankingTests.TestBuildNodeArrayGraph" />
  <Add Test="SparqlForHumans.UnitTests.PageRankRankingTests.TestCalculateFloatRankOneIteration" />
  <Add Test="SparqlForHumans.UnitTests.PageRankRankingTests.TestCalculateFloatRankSevenIterations" />
  <Add Test="SparqlForHumans.UnitTests.PageRankRankingTests.TestCalculateFloatRankSevenIterationsDifferentIds" />
  <Add Test="SparqlForHumans.UnitTests.PageRankRankingTests.TestCalculateFloatRankSevenIterationsMultipleProperties" />
  <Add Test="SparqlForHumans.UnitTests.RDFExtensionsTests.TestFailGetTriple" />
  <Add Test="SparqlForHumans.UnitTests.RDFExtensionsTests.TestGetId" />
  <Add Test="SparqlForHumans.UnitTests.RDFExtensionsTests.TestGetLiteral" />
  <Add Test="SparqlForHumans.UnitTests.RDFExtensionsTests.TestGetPredicateType" />
  <Add Test="SparqlForHumans.UnitTests.RDFExtensionsTests.TestGetQCode" />
  <Add Test="SparqlForHumans.UnitTests.RDFExtensionsTests.TestGetTriple" />
  <Add Test="SparqlForHumans.UnitTests.RDFExtensionsTests.TestGetURIequalsNodeToString" />
  <Add Test="SparqlForHumans.UnitTests.RDFExtensionsTests.TestGetUri" />
  <Add Test="SparqlForHumans.UnitTests.RDFExtensionsTests.TestIsEntity" />
  <Add Test="SparqlForHumans.UnitTests.RDFExtensionsTests.TestIsInstanceOf" />
  <Add Test="SparqlForHumans.UnitTests.RDFExtensionsTests.TestIsLiteral" />
  <Add Test="SparqlForHumans.UnitTests.RDFExtensionsTests.TestIsProperty" />
  <Add Test="SparqlForHumans.UnitTests.RDFExtensionsTests.TestIsSubClass" />
  <Add Test="SparqlForHumans.UnitTests.RDFExtensionsTests.TestIsUriNode" />
  <Add Test="SparqlForHumans.UnitTests.RDFExtensionsTests.TestIsValidLanguage" />
  <Add Test="SparqlForHumans.UnitTests.RDFExtensionsTests.TestIsValidLanguageDefault" />
  <Add Test="SparqlForHumans.UnitTests.RDFExtensionsTests.TestIsValidLanguageLiteral" />
  <Add Test="SparqlForHumans.UnitTests.RDFExtensionsTests.TestPropertyType" />
  <Add Test="SparqlForHumans.UnitTests.RDFExtensionsTests.TestReorderProperty" />
  <Add Test="SparqlForHumans.UnitTests.ReorderingTests.TestReorder" />
  <Add Test="SparqlForHumans.UnitTests.Wikidata.WikidataEndpointTests.TestWikidataQueryEntityById" />
  <Add Test="SparqlForHumans.UnitTests.Wikidata.WikidataEndpointTests.TestWikidataQueryPropertyById" />
  <Add Test="SparqlForHumans.UnitTests.Wikidata.WikidataEndpointTests.TestWikidataSearchByLabel" />
  <Add Test="SparqlForHumans.UnitTests.Wikidata.WikidataQueriesTest.TestSparqlEndpointWorksAsync_Cats" />
  <Add Test="SparqlForHumans.UnitTests.Wikidata.WikidataQueriesTest.TestSparqlEndpointWorks_Cats" />
  <Add Test="SparqlForHumans.UnitTests.Wikidata.WikidataQueriesTest.TestSparqlEndpointWorks_Own" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.DictionaryExtensionsTests.TestAddSafeDifferentTypes" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.DictionaryExtensionsTests.TestAddSafeRangeDifferentTypes" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.DictionaryExtensionsTests.TestAddSafeRangeSameType" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.DictionaryExtensionsTests.TestAddSafeSameType" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.DictionaryExtensionsTests.TestInvertDictionaryDifferentTypes" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.DictionaryExtensionsTests.TestInvertDictionarySameType" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.DictionaryExtensionsTests.TestToArrayDictionary" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.EnumerableExtensionsTests.TestCustomGrouping" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.FileHelperTests.TestCountLines" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.FileHelperTests.TestGetFilenameType" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.FileHelperTests.TestGetFilenameTypeNotExisting" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.FileHelperTests.TestGetLinesCompressed" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.FileHelperTests.TestGetLinesUnknownThrowsException" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.FileHelperTests.TestGetOrCreateDirectory" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.FileHelperTests.TestGetOutputFilename_All" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.FileHelperTests.TestGetOutputFilename_NoLimit" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.FileHelperTests.TestGetOutputFilename_Zero" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.FileHelperTests.TestGetOutputFilename_filtered_ntgz" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.FileHelperTests.TestGetOutputFilename_nt" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.FileHelperTests.TestGetOutputFilename_ntgz" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.FileHelperTests.TestGetOutputFilteredFilename" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.FileHelperTests.TestGetOutputFilteredFilenameReduceLimitK" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.FileHelperTests.TestGetOutputFilteredFilenameReduceLimitM" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.FileHelperTests.TestReadLines" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.FileHelperTests.TestReadLinesCompressedNotExisting" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.FileHelperTests.TestTrimFile" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.ModelsExtensionsTests.TestGetEntityUri" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.ModelsExtensionsTests.TestGetPropertyUri" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.ModelsExtensionsTests.TestSubjectToString" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.NumberExtensionsTests.TestToThreeDecimalsLarger" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.NumberExtensionsTests.TestToThreeDecimalsShorter" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.NumberExtensionsTests.TestToThreeDecimalsZero" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.PathExtensionsTests.TestDeleteIfExistsDirectory" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.PathExtensionsTests.TestDeleteIfExistsFile" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.StringExtensionsTests.TestToDoubleMix" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.StringExtensionsTests.TestToDoubleNegativeExponential" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.StringExtensionsTests.TestToDoubleNegativeNumbers" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.StringExtensionsTests.TestToDoubleOnlyLetters" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.StringExtensionsTests.TestToDoubleOnlyNumbers" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.StringExtensionsTests.TestToDoublePositiveExponential" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.StringExtensionsTests.TestToIntMix" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.StringExtensionsTests.TestToIntNegativeNumbers" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.StringExtensionsTests.TestToIntOnlyLetters" />
  <Add Test="SparqlForHumans.UnitTests.Utilities.StringExtensionsTests.TestToIntOnlyNumbers" />
  <Add Test="SparqlForHumans.UnitTests.Query.DocumentMappingTests.TestMapEntitySingleInstance" />
  <Add Test="SparqlForHumans.UnitTests.Query.DocumentMappingTests.TestMapEntityTwoInstances" />
  <Add Test="SparqlForHumans.UnitTests.Query.InMemoryQueryEngineTests.TestDomainEntities" />
  <Add Test="SparqlForHumans.UnitTests.Query.InMemoryQueryEngineTests.TestIncomingProperties" />
  <Add Test="SparqlForHumans.UnitTests.Query.InMemoryQueryEngineTests.TestOutgoingProperties" />
  <Add Test="SparqlForHumans.UnitTests.Query.InMemoryQueryEngineTests.TestRangeEntities" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphBaseTests.TestEqualGraphs" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphConvertToSparqlTests.TestSparql_2ConnectedNodes_1_SubjectIsGivenType_EdgeP27_2Nodes1Edge" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphConvertToSparqlTests.TestSparql_2ConnectedNodes_2_ObjectIsGivenType_EdgeP27_2Nodes1Edge" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphConvertToSparqlTests.TestSparql_2ConnectedNodes_3_SubjectIsGivenType_EdgeVar_2Nodes1Edge" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphConvertToSparqlTests.TestSparql_2ConnectedNodes_4_ObjectIsGivenType_EdgeVar_2Nodes1Edge" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphConvertToSparqlTests.TestSparql_5ConnectedNodes_SiblingBrothersDirectorsOfMovies_5Nodes7Edge" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphExtensionTests.TestEdgeHasInstanceOfFalse" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphExtensionTests.TestEdgeHasInstanceOfTrue" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphExtensionTests.TestEdgeIsInferibleFalse" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphExtensionTests.TestEdgeIsInferibleFalseInstanceOf" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphExtensionTests.TestEdgeIsInferibleTrue" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphExtensionTests.TestGetEdgeSourceAndTargetNodes" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphExtensionTests.TestGetInstanceOfEdges" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphExtensionTests.TestGetNodeIncomingAndOutgoingEdges" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphExtensionTests.TestGetNodeIncomingAndOutgoingNodes" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphExtensionTests.TestGetNodeInstanceOfValues" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphResultsPracticalTests.TestResults_FullIndex_1_GoingToHumanInstanceOfTypeShouldBeThere" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphResultsPracticalTests.TestResults_FullIndex_2_OutgoingPropertiesOfKnownInstanceOfTypeShouldBeReducedInPossibilities" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphResultsPracticalTests.TestResults_FullIndex_3_OutgoingPropertiesOfKnownOutgoingTypeShouldBeReducedInPossibilities" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphResultsPracticalTests.TestResults_ShowsError_1_OutgoingPropertiesOfKnownInstanceOfTypeShouldBeReducedInPossibilities" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphResultsPracticalTests.TestResults_ShowsError_2_OutgoingPropertiesOfKnownOutgoingTypeShouldBeReducedInPossibilities" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphResultsTests.TestResults_1IsolatedNode_1_1Node0Edge" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphResultsTests.TestResults_1IsolatedNode_2_GivenType_1Node0Edge" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphResultsTests.TestResults_2IsolatedNodes_1_2Nodes0Edge" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphResultsTests.TestResults_2IsolatedNodes_2_GivenTypes_2Nodes0Edge" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphResultsTests.TestResults_2Nodes_01_NoGivenTypes_2Nodes1Edge" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphResultsTests.TestResults_2Nodes_02_SourceIsGivenType_2Nodes1Edge" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphResultsTests.TestResults_2Nodes_03_TargetIsGivenType_2Nodes1Edge" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphResultsTests.TestResults_2Nodes_04_SourceTargetAreGivenType_2Nodes1Edge" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphResultsTests.TestResults_2Nodes_05_SourceTargetPredicateAreGivenTypes_2Nodes1Edge" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphResultsTests.TestResults_2Nodes_06_SourceIsInstanceOfType_2Nodes1Edge" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphResultsTests.TestResults_2Nodes_07_SourceToType_2Nodes1Edge" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphResultsTests.TestResults_2Nodes_08_GivenPredicate_2Nodes1Edge" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphResultsTests.TestResults_2Nodes_09_GivenPredicate_GivenSubject_2Nodes1Edge" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphResultsTests.TestResults_2Nodes_10_GivenPredicate_GivenSubject_2Nodes1Edge" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphResultsTests.TestResults_3Nodes_1_N0InstanceOfN1_E1DomainN0_3Nodes2Edge" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphResultsTests.TestResults_3Nodes_2_N0InstanceOfN1_E1RangeN0_3Nodes2Edge" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphResultsTests.TestResults_4Nodes_1_N1InstanceOfN3_N2InstanceOfN4_N1E1N2_E1DomainN1RangeN2_4Nodes3Edge" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphResultsTests.TestResults_Inferred_2ConnectedNodes_1_N0P25N1_E1DomainP25_2Nodes2Edges" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphResultsTests.TestResults_Inferred_2ConnectedNodes_2_N0P25N1_E1RangeP25_2Nodes2Edges" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphResultsTests.TestResults_Inferred_3ConnectedNodes_1_N0P25N1_E1DomainP25_3Nodes2Edge" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphResultsTests.TestResults_Inferred_3ConnectedNodes_2_N0P25N1_E1RangeP25_3Nodes2Edge" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphResultsTests.TestResults_Inferred_3ConnectedNodes_3_N0P25N1_N1P27N2_E1DomainP25RangeP27_3Nodes3Edges" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphTypesTests.TestTypes_2ConnectedNodes_1_SourceIsGivenType_2Nodes1Edge" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphTypesTests.TestTypes_2ConnectedNodes_1_TargetIsGivenType_2Nodes1Edge" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphTypesTests.TestTypes_2ConnectedNodes_2_SourceIsGivenType_TargetIsGivenType_2Nodes1Edge" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphTypesTests.TestTypes_2ConnectedNodes_3_SourceIsGivenType_TargetIsGivenType_E0N0P27E1_2Nodes1Edge" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphTypesTests.TestTypes_2ConnectedNodes_4_SubjectIsInstanceOfType_2Nodes1Edge" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphTypesTests.TestTypes_3ConnectedNodes_1_N0InstanceOfN1_E1DomainN0_3Nodes2Edge" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphTypesTests.TestTypes_3ConnectedNodes_2_N0InstanceOfN1_E1RangeN0_3Nodes2Edge" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphTypesTests.TestTypes_4ConnectedNodes_N1InstanceOfN3_N2InstanceOfN4_N1E1N2_E1DomainN1RangeN2_4Nodes3Edge" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphTypesTests.TestTypes_Inferred_2ConnectedNodes_N0P25N1_N0DRP25N1_2Nodes2Edges" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphTypesTests.TestTypes_Inferred_2ConnectedNodes_N0P25N1_N1DRP25N0_2Nodes2Edges" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphTypesTests.TestTypes_Inferred_3ConnectedNodes_N0P25N1_E1DomainP25_3Nodes2Edge" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphTypesTests.TestTypes_Inferred_3ConnectedNodes_N0P25N1_E1DomainP25_E2DomainP25_3Nodes3Edge" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphTypesTests.TestTypes_Inferred_3ConnectedNodes_N0P25N1_E1RangeP25_3Nodes2Edge" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryGraphTypesTests.TestTypes_Inferred_3ConnectedNodes_N0P25N1_N1P27N2_E1DomainP25RangeP27_3Nodes3Edges" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryTests.TestEntityPropertiesQueryResults" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryTests.TestFullQueryResults" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryTests.TestInstanceOfQuery_InstancesOfHumans" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryTests.TestIntersectEntityPropertiesQueryResults" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryTests.TestMultiQueryBarackObamaShouldShowFirst" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryTests.TestMultiQueryCapitalIcelandShouldShowFirst" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryTests.TestMultiQueryMichelleObamaShouldShowFirst" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryTests.TestNoEndWildcardQueryResults" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryTests.TestQueryAddProperties" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryTests.TestQueryByMultipleIds" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryTests.TestQueryIsTypeFields" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryTests.TestQueryNonExistingEntityById" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryTests.TestQueryNonExistingEntityByLabel" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryTests.TestQueryNonExistingPropertyById" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryTests.TestQueryNonExistingPropertyByLabel" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryTests.TestQuerySingleInstanceById" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryTests.TestQuerySingleInstanceByLabel" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryTests.TestRankMultiQuery_ShouldBeSortedByRank_AllWithAltLabels_Q1More" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryTests.TestRankMultiQuery_ShouldBeSortedByRank_AllWithSameAltLabels" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryTests.TestRankMultiQuery_ShouldBeSortedByRank_OneWithAltLabels" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryTests.TestRankMultiQuery_ShouldBeSortedByRank_OnlyAltLabels" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryTests.TestRankMultiQuery_ShouldBeSortedByRank_OnlyLabels" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryTests.TestScenario2GetDomainsForUnknownObjectType" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryTests.TestScenario3GetRangesForUnknownSubjectType" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryTests.TestScenario4GetPropertiesForKnownSubjectObjectType" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryTests.TestScenario4GetPropertiesForKnownSubjectObjectTypeWithGarbage" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryTests.TestSingleQuery_BarackObama_ShouldShowFirst" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryTests.TestSingleQuery_MichelleObama_ShouldShowFirst" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryTests.TestTopQueryEntitiesResults" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryTests.TestTopQueryPropertiesResults" />
  <Add Test="SparqlForHumans.UnitTests.Query.QueryTests.TestWithEndWildcardQueryResults" />
  <Add Test="SparqlForHumans.UnitTests.Query.SparqlResultMappingTests.TestFromGraph" />
  <Add Test="SparqlForHumans.UnitTests.Query.SparqlResultMappingTests.TestResultObamaToEntity" />
  <Add Test="SparqlForHumans.UnitTests.Query.SparqlResultMappingTests.TestResultToEntity" />
  <Add Test="SparqlForHumans.UnitTests.Index.EntitiesIndexerTests.TestCreateEntityIndex5k" />
  <Add Test="SparqlForHumans.UnitTests.Index.EntitiesIndexerTests.TestCreateIndexAddTypesFields" />
  <Add Test="SparqlForHumans.UnitTests.Index.EntitiesIndexerTests.TestCreateIndexDocumentCountEqualsGroupsCounts" />
  <Add Test="SparqlForHumans.UnitTests.Index.EntitiesIndexerTests.TestCreateSingleInstanceIndexInstanceOf" />
  <Add Test="SparqlForHumans.UnitTests.Index.EntitiesIndexerTests.TestCreateSingleInstanceIndexIsType" />
  <Add Test="SparqlForHumans.UnitTests.Index.EntitiesIndexerTests.TestCreateSingleInstanceIndexReverseProperties" />
  <Add Test="SparqlForHumans.UnitTests.Index.EntitiesIndexerTests.TestIndexHasTypes" />
  <Add Test="SparqlForHumans.UnitTests.Index.EntitiesIndexerTests+EntityIndexMultipleInstanceTests.TestCreateEntityMultipleInstanceIndex" />
  <Add Test="SparqlForHumans.UnitTests.Index.EntitiesIndexerTests+EntityIndexMultipleInstanceTests.TestCreateEntityMultipleInstanceIndexDocCount" />
  <Add Test="SparqlForHumans.UnitTests.Index.EntitiesIndexerTests+EntityIndexMultipleInstanceTests.TestCreateSingleInstanceIndexDocNotNull" />
  <Add Test="SparqlForHumans.UnitTests.Index.EntitiesIndexerTests+EntityIndexSingleInstanceTest.TestCreateEntityIndexAddsFolders" />
  <Add Test="SparqlForHumans.UnitTests.Index.EntitiesIndexerTests+EntityIndexSingleInstanceTest.TestCreateSingleInstanceIndexAltLabel" />
  <Add Test="SparqlForHumans.UnitTests.Index.EntitiesIndexerTests+EntityIndexSingleInstanceTest.TestCreateSingleInstanceIndexDescription" />
  <Add Test="SparqlForHumans.UnitTests.Index.EntitiesIndexerTests+EntityIndexSingleInstanceTest.TestCreateSingleInstanceIndexDocCount" />
  <Add Test="SparqlForHumans.UnitTests.Index.EntitiesIndexerTests+EntityIndexSingleInstanceTest.TestCreateSingleInstanceIndexId" />
  <Add Test="SparqlForHumans.UnitTests.Index.EntitiesIndexerTests+EntityIndexSingleInstanceTest.TestCreateSingleInstanceIndexLabel" />
  <Add Test="SparqlForHumans.UnitTests.Index.EntitiesIndexerTests+EntityIndexSingleInstanceTest.TestCreateSingleInstanceIndexProperties" />
  <Add Test="SparqlForHumans.UnitTests.Index.PropertiesIndexerTests.TestAddDomainToIndex" />
  <Add Test="SparqlForHumans.UnitTests.Index.PropertiesIndexerTests.TestAddRangeToIndex" />
  <Add Test="SparqlForHumans.UnitTests.Index.PropertiesIndexerTests.TestAddRangeToIndex_InstanceOf" />
  <Add Test="SparqlForHumans.UnitTests.Index.PropertiesIndexerTests.TestCreatePropertyIndex" />
  <Add Test="SparqlForHumans.UnitTests.Index.PropertiesIndexerTests.TestCreatePropertyIndexAndMapResults" />
  <Add Test="SparqlForHumans.UnitTests.Index.Relations.IsTypeEntityIndexerTests.TestGetEntityType" />
  <Add Test="SparqlForHumans.UnitTests.Index.Relations.IsTypeEntityIndexerTests.TestGetEntityTypesDictionary" />
  <Add Test="SparqlForHumans.UnitTests.Index.Relations.IsTypeEntityIndexerTests.TestGetField" />
  <Add Test="SparqlForHumans.UnitTests.Index.Fields.AltLabelIndexerTests.TestGetField" />
  <Add Test="SparqlForHumans.UnitTests.Index.Fields.DescriptionIndexerTests.TestGetField" />
  <Add Test="SparqlForHumans.UnitTests.Index.Fields.IdIndexerTests.TestGetField" />
  <Add Test="SparqlForHumans.UnitTests.Index.Fields.InstanceOfIndexerTests.TestGetField" />
  <Add Test="SparqlForHumans.UnitTests.Index.Fields.InstanceOfIndexerTests.TestGetFieldConcatenated" />
  <Add Test="SparqlForHumans.UnitTests.Index.Fields.LabelIndexerTests.TestGetField" />
  <Add Test="SparqlForHumans.UnitTests.Index.Fields.PropertyFieldsIndexerTests.TestGetField" />
  <Add Test="SparqlForHumans.UnitTests.Index.Fields.PropertyFieldsIndexerTests.TestGetFieldConcatenated" />
</Playlist>